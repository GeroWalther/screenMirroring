/**\n * Network utilities for auto-detecting local IP addresses\n * Used by both sender and receiver apps\n */\n\n/**\n * Get the local IP address for the signaling server\n * Tries to detect the best IP address for local network communication\n */\nexport const getLocalSignalingURL = () => {\n  // In a real app, you might want to:\n  // 1. Use mDNS/Bonjour to discover the signaling server\n  // 2. Try multiple IP addresses and pick the working one\n  // 3. Allow user configuration\n  \n  // For now, using the detected IP from your Mac\n  const LOCAL_IP = '192.168.0.25';\n  const PORT = 8080;\n  \n  return `ws://${LOCAL_IP}:${PORT}`;\n};\n\n/**\n * Get ICE servers configuration\n * Uses free STUN servers, in production you'd want TURN servers too\n */\nexport const getICEServers = () => {\n  return [\n    { urls: 'stun:stun.l.google.com:19302' },\n    { urls: 'stun:stun1.l.google.com:19302' },\n    { urls: 'stun:stun2.l.google.com:19302' },\n    // Add TURN servers for production NAT traversal\n    // { urls: 'turn:your-turn-server.com:3478', username: 'user', credential: 'pass' },\n    // { urls: 'turns:your-turn-server.com:5349', username: 'user', credential: 'pass' }\n  ];\n};\n\n/**\n * Default room configuration\n * Both sender and receiver should use the same room\n */\nexport const DEFAULT_ROOM = 'living-room';\n\n/**\n * Quality presets for screen sharing\n */\nexport const QUALITY_PRESETS = {\n  'Ultra High': { width: 1920, height: 1080, frameRate: 60, bitrate: 8000000 },\n  'High': { width: 1920, height: 1080, frameRate: 30, bitrate: 6000000 },\n  'Medium': { width: 1280, height: 720, frameRate: 30, bitrate: 4000000 },\n  'Low': { width: 854, height: 480, frameRate: 30, bitrate: 2000000 },\n};\n\nexport default {\n  getLocalSignalingURL,\n  getICEServers,\n  DEFAULT_ROOM,\n  QUALITY_PRESETS,\n};